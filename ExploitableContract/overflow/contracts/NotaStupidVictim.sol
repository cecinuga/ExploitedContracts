//SPDX-License-Identifier: Unlicensed

pragma solidity ^0.6.10;

contract Victim {
    mapping(address => uint) public balances;
    mapping(address => uint) public locktime;

    function deposit() external payable {
        balances[msg.sender] += msg.value;
        locktime[msg.sender] = now + 1 days;
    }

    function increaseLockTime(uint _seconds) public {
        locktime[msg.sender] = locktime[msg.sender].add(_seconds);
    }

    function getBalances() public returns(uint){
        return balances[msg.sender];
    }

    function getLocktime() public returns(uint){
        return locktime[msg.sender];
    }

    function withdraw() public {
        require(balances[msg.sender] > 0, "[-]Insufficient Founds");
        require(now > locktime[msg.sender], "[-]Lock Time Active.");
    
        uint amount = balances[msg.sender];
        balances[msg.sender] = 0;

        (bool sent, ) = msg.sender.call{value: amount}("");
        require(sent, "Failed to send Ether");
    }
}